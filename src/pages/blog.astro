---
import Layout from '../layouts/Layout.astro';
import BlogPost from '../components/BlogPost.astro';
import { fetchPosts } from '../lib/api';
import matter from 'gray-matter';

const { posts, hasError } = await fetchPosts();

let allPosts: { id: string; url: string; frontmatter: any; }[] = [];

if (!hasError) {
  for (const post of posts) {
    // Descargamos el markdown pero solo para leer el frontmatter
    const mdRes = await fetch(post.url);
    const mdText = await mdRes.text();
    const { data: frontmatter } = matter(mdText);

    allPosts.push({
      id: post.id,
      url: post.url,
      frontmatter,
    });
  }

  // Ordenar por fecha descendente
  allPosts = allPosts.sort(
    (a, b) =>
      new Date(b.frontmatter.date).getTime() -
      new Date(a.frontmatter.date).getTime()
  );
}

const PAGE_PROPS = {
  title: 'Blog',
  description: 'Cuaderno de bit√°cora de Alejandro Propst',
  image: '/logbook.png',
};

export const prerender = true;
---

<Layout {...PAGE_PROPS}>
  <section class="max-w-3xl mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold mb-8 text-center">
      Welcome to my blog entries
      <span class="block text-lg text-gray-500">
        (In Spanish cuz I'm so lazy to write them in English)
      </span>
    </h1>

    {hasError ? (
      <p class="text-red-500 text-center">Error al cargar los posts.</p>
    ) : (
      <div class="flex flex-col gap-6">
        {allPosts.map((post) => {
          const dateObj = new Date(post.frontmatter.date);
          const hasValidDate =
            post.frontmatter.date && !isNaN(dateObj.getTime());

            return (
              <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-5 hover:shadow-lg hover:bg-gray-700 transition-all">
                <a href={`/posts/${post.id}`}>
                  <li>{post.frontmatter.title}</li>
                  {hasValidDate && (
                    <p class="text-sm text-gray-500 mt-1">
                      {dateObj.toLocaleDateString('es-ES', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                      })}
                    </p>
                  )}
                </a>
              </div>
            );
          })}
        </div>
      )
    }
  </section>
</Layout>
