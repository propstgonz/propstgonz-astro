---
import Layout from '../../layouts/Layout.astro';
import { fetchPosts } from '../../lib/api';
import matter from 'gray-matter';
import { marked } from 'marked';

const { slug } = Astro.params;

interface Frontmatter {
  title?: string;
  description?: string;
  image?: string | { url?: string };
  date?: string | null;
}

let postMeta;
let frontmatter: Frontmatter = {};
let htmlContent = '';
let hasError = false;

try {
  // 1️⃣ Fetch de todos los posts
  const { posts, hasError: fetchError } = await fetchPosts();
  if (fetchError) throw new Error('Error fetching posts data');

  // 2️⃣ Encontramos el post con el slug correspondiente
  postMeta = posts.find((p) => p.id === slug);
  if (!postMeta) throw new Error('Post not found');

  // 3️⃣ Fetch del Markdown
  const mdRes = await fetch(postMeta.url);
  if (!mdRes.ok) throw new Error(`Error fetching markdown content: ${mdRes.status}`);
  const mdText = await mdRes.text();

  // 4️⃣ Extraemos frontmatter y contenido
  const parsed = matter(mdText);
  frontmatter = parsed.data || {};
  const markdownContent = marked(parsed.content || '');
  htmlContent = typeof markdownContent === 'string' ? markdownContent : String(markdownContent);

} catch (err) {
  console.error('Error loading post:', err);
  hasError = true;

  // Opcional: contenido fallback para que no se rompa la web
  frontmatter = {
    title: 'Post no disponible',
    description: '',
    image: '',
    date: null,
  };
  htmlContent = '<p>Este post no se pudo cargar. Intenta más tarde.</p>';
}
// Props de la página
const PAGE_PROPS = {
  title: frontmatter.title || 'Post',
  description: frontmatter.description || '',
  image: typeof frontmatter.image === 'object' ? frontmatter.image?.url || '' : frontmatter.image || '',
};

export const prerender = false;
---

<Layout {...PAGE_PROPS}>
  <article class="max-w-3xl mx-auto px-4 py-8 prose dark:prose-invert">
    <h1>{frontmatter.title}</h1>
    {frontmatter.date && (
      <time datetime={frontmatter.date}>
        {new Date(frontmatter.date).toLocaleDateString('es-ES', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
        })}
      </time>
    )}

    <div set:html={htmlContent} class="mt-6"></div>

    {hasError && (
      <p class="mt-4 text-red-500">Hubo un error cargando este post. Revisa la consola del servidor.</p>
    )}
  </article>
</Layout>
